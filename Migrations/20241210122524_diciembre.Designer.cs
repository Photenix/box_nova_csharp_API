// <auto-generated />
using System;
using BoxNovaSoftAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoxNovaSoftAPI.Migrations
{
    [DbContext(typeof(BoxNovaDbContext))]
    [Migration("20241210122524_diciembre")]
    partial class diciembre
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Carrito", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalle"));

                    b.Property<int>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<float>("PrecioUnitario")
                        .HasColumnType("real");

                    b.Property<float>("Subtotal")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("real")
                        .HasComputedColumnSql("[Cantidad] * [PrecioUnitario]");

                    b.HasKey("IdDetalle");

                    b.HasIndex("IdCliente");

                    b.ToTable("Carritos");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.CategoriaProducto", b =>
                {
                    b.Property<int>("IdCProd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCProd"));

                    b.Property<bool>("EstadoCProd")
                        .HasColumnType("bit");

                    b.Property<string>("NombreCProd")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdCProd");

                    b.ToTable("CategoriaProducto");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<string>("ApellidoCliente")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("CedulaCliente")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DireccionCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("GeneroCliente")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("NombreCliente")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TelCliente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCliente");

                    b.HasIndex("CedulaCliente")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.DetallePedido", b =>
                {
                    b.Property<int>("IdDetPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetPedido"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDetPedido");

                    b.HasIndex("IdPedido");

                    b.HasIndex("IdProducto");

                    b.ToTable("DetallePedidos");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.DetalleVenta", b =>
                {
                    b.Property<int>("DetalleVentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleVentaId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.HasKey("DetalleVentaId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("VentaId");

                    b.ToTable("DetalleVentas");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Pedido", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPedido"));

                    b.Property<string>("EstadoPedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaDelPedido")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdPedido");

                    b.HasIndex("IdCliente");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.PerXrolXpriv", b =>
                {
                    b.Property<int>("IdPerxrol")
                        .HasColumnType("int")
                        .HasColumnName("id_perxrol");

                    b.Property<int?>("IdPer")
                        .HasColumnType("int")
                        .HasColumnName("id_per");

                    b.Property<int?>("IdPriv")
                        .HasColumnType("int")
                        .HasColumnName("id_priv");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.HasKey("IdPerxrol")
                        .HasName("pk_perxrol");

                    b.HasIndex("IdPriv");

                    b.HasIndex("IdRol");

                    b.HasIndex(new[] { "IdPer", "IdRol", "IdPriv" }, "un_perxrolxpriv")
                        .IsUnique()
                        .HasFilter("[id_per] IS NOT NULL AND [id_rol] IS NOT NULL AND [id_priv] IS NOT NULL");

                    b.ToTable("PerXRolXPriv", (string)null);
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Permiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .HasColumnType("int")
                        .HasColumnName("id_permiso");

                    b.Property<bool>("EstadoPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("estado_permiso");

                    b.Property<string>("NombrePermiso")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre_permiso");

                    b.HasKey("IdPermiso")
                        .HasName("pk_permiso");

                    b.HasIndex(new[] { "NombrePermiso" }, "un_nombre_permiso")
                        .IsUnique();

                    b.ToTable("Permisos");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Privilegio", b =>
                {
                    b.Property<int>("IdPrivilegio")
                        .HasColumnType("int")
                        .HasColumnName("id_privilegio");

                    b.Property<string>("NombrePrivilegio")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre_privilegio");

                    b.HasKey("IdPrivilegio")
                        .HasName("pk_privilegio");

                    b.ToTable("Privilegios");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("CategoriaProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClasificacionProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EstadoProducto")
                        .HasColumnType("bit");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioProducto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockProducto")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.Property<bool>("EstadoRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("estado_rol");

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre_rol");

                    b.HasKey("IdRol")
                        .HasName("pk_rol");

                    b.HasIndex(new[] { "NombreRol" }, "un_nombre_rol")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.SubCategoriaProducto", b =>
                {
                    b.Property<int>("IdSubCProd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSubCProd"));

                    b.Property<bool>("EstadoCProd")
                        .HasColumnType("bit");

                    b.Property<int>("IdCProd")
                        .HasColumnType("int");

                    b.Property<string>("NombreCProd")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdSubCProd");

                    b.HasIndex("IdCProd");

                    b.ToTable("SubCategoriaProductos");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("id_usuario");

                    b.Property<string>("ContrasenaUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("contrasena_usuario");

                    b.Property<string>("CorreoUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("correo_usuario");

                    b.Property<DateOnly>("CumpleanoUsuario")
                        .HasColumnType("date")
                        .HasColumnName("cumpleano_usuario");

                    b.Property<bool>("EstadoUsuario")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("estado_usuario");

                    b.Property<DateOnly>("FechaCreacionUsuario")
                        .HasColumnType("date")
                        .HasColumnName("fecha_creacion_usuario");

                    b.Property<int>("FkRol")
                        .HasColumnType("int")
                        .HasColumnName("fk_rol");

                    b.Property<string>("GeneroUsuario")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("genero_usuario");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre_usuario");

                    b.Property<string>("TarjetaIdentidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tarjeta_identidad");

                    b.HasKey("IdUsuario")
                        .HasName("pk_user");

                    b.HasIndex("FkRol");

                    b.HasIndex(new[] { "TarjetaIdentidad" }, "UQ__Usuarios__CC7F75E4F10CEE4D")
                        .IsUnique();

                    b.HasIndex(new[] { "CorreoUsuario" }, "UQ__Usuarios__CD54AB1CAFE69B7A")
                        .IsUnique();

                    b.HasIndex(new[] { "CorreoUsuario" }, "un_correo_usuario")
                        .IsUnique();

                    b.HasIndex(new[] { "TarjetaIdentidad" }, "un_tarjeta_identidad")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Venta", b =>
                {
                    b.Property<int>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VentaId"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("VentaId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Carrito", b =>
                {
                    b.HasOne("BoxNovaSoftAPI.Models.Cliente", "Cliente")
                        .WithMany("Carritos")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.DetallePedido", b =>
                {
                    b.HasOne("BoxNovaSoftAPI.Models.Pedido", "Pedido")
                        .WithMany("DetallePedidos")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoxNovaSoftAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.DetalleVenta", b =>
                {
                    b.HasOne("BoxNovaSoftAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoxNovaSoftAPI.Models.Venta", "Venta")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Pedido", b =>
                {
                    b.HasOne("BoxNovaSoftAPI.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.PerXrolXpriv", b =>
                {
                    b.HasOne("BoxNovaSoftAPI.Models.Permiso", "IdPerNavigation")
                        .WithMany("PerXrolXprivs")
                        .HasForeignKey("IdPer")
                        .HasConstraintName("fk_permiso");

                    b.HasOne("BoxNovaSoftAPI.Models.Privilegio", "IdPrivNavigation")
                        .WithMany("PerXrolXprivs")
                        .HasForeignKey("IdPriv")
                        .HasConstraintName("fk_priv");

                    b.HasOne("BoxNovaSoftAPI.Models.Rol", "IdRolNavigation")
                        .WithMany("PerXrolXprivs")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("fk_rol");

                    b.Navigation("IdPerNavigation");

                    b.Navigation("IdPrivNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.SubCategoriaProducto", b =>
                {
                    b.HasOne("BoxNovaSoftAPI.Models.CategoriaProducto", "Categoria")
                        .WithMany("SubCategorias")
                        .HasForeignKey("IdCProd")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Usuario", b =>
                {
                    b.HasOne("BoxNovaSoftAPI.Models.Rol", "FkRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("FkRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_rol_user");

                    b.Navigation("FkRolNavigation");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Venta", b =>
                {
                    b.HasOne("BoxNovaSoftAPI.Models.Cliente", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.CategoriaProducto", b =>
                {
                    b.Navigation("SubCategorias");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Cliente", b =>
                {
                    b.Navigation("Carritos");

                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Pedido", b =>
                {
                    b.Navigation("DetallePedidos");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Permiso", b =>
                {
                    b.Navigation("PerXrolXprivs");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Privilegio", b =>
                {
                    b.Navigation("PerXrolXprivs");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Rol", b =>
                {
                    b.Navigation("PerXrolXprivs");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("BoxNovaSoftAPI.Models.Venta", b =>
                {
                    b.Navigation("DetalleVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
